# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  ETHEREAL-DEGENERATE TASKCHAIN  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# This agent:
# 1. Creates the mono-repo folders (contracts / server / web).
# 2. Drops minimal boiler-plate (package.json, tsconfig, vite + wagmi,
#    Fastify server, .replit & workflow for Deploy).
# 3. Installs deps with pnpm and runs turbo build to verify.
# 4. Commits everything to git.
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

env:
  GIT_AUTHOR_NAME:  Mark Mlynski
  GIT_AUTHOR_EMAIL: mark@example.com
  GIT_COMMITTER_NAME:  Mark Mlynski
  GIT_COMMITTER_EMAIL: mark@example.com
  REPO_NAME: eth-degen-taskchain

steps:
  # 0Ô∏è‚É£  initialise repo root
  - name: Init git & root pkg
    run: |
      mkdir -p $REPO_NAME && cd $REPO_NAME
      git init -b main
      pnpm init -y
      pnpm add -w -D turbo

  # 1Ô∏è‚É£  contracts workspace (Hardhat stub)
  - name: Scaffold contracts
    run: |
      cd $REPO_NAME
      mkdir -p contracts && cd contracts
      pnpm init -y
      pnpm add -D hardhat @openzeppelin/contracts
      npx hardhat init --template sample-project --force
      sed -i 's/"private": true/"private": true,\n  "type": "module"/' package.json

  # 2Ô∏è‚É£  server workspace (Fastify)
  - name: Scaffold server
    run: |
      cd $REPO_NAME
      mkdir -p server && cd server
      pnpm init -y
      pnpm add fastify googleapis node-fetch
      cat > index.js <<'EOF'
      import Fastify from 'fastify';
      import path from 'path';
      import { fileURLToPath } from 'url';
      const __dirname = path.dirname(fileURLToPath(import.meta.url));

      const app = Fastify();
      app.register(import('@fastify/static'), { root: path.join(__dirname, '../web/dist') });
      app.get('/health', (_, reply) => reply.code(200).send('OK'));

      const PORT = process.env.PORT || 5000;
      app.listen({ port: PORT, host: '0.0.0.0' }).then(() =>
        console.log(`üöÄ Server on ${PORT}`));
      EOF

  # 3Ô∏è‚É£  web workspace (React + wagmi)
  - name: Scaffold web
    run: |
      cd $REPO_NAME
      pnpx create-vite web -- --template react-ts --force
      cd web
      pnpm add wagmi viem @rainbow-me/rainbowkit
      pnpm add -D tailwindcss postcss autoprefixer
      npx tailwindcss init -p
      # orbitron font + neon css stub
      echo "@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;" > src/index.css

  # 4Ô∏è‚É£  top-level turbo.json & .replit
  - name: Root config
    run: |
      cd $REPO_NAME
      cat > turbo.json <<'EOF'
      {
        "$schema": "https://turbo.build/schema.json",
        "pipeline": {
          "build": {
            "dependsOn": ["^build"],
            "outputs": ["dist/**", ".next/**"]
          },
          "dev": {
            "cache": false
          }
        }
      }
      EOF

      cat > .replit <<'EOF'
      run = "turbo run dev --parallel"

      [deployment]
      schemaVersion   = 2
      startCommand    = "node server/index.js"
      healthcheckPath = "/health"
      readinessTimeout = 60

      [[ports]]
      localPort    = 5000
      externalPort = 80
      EOF

  # 5Ô∏è‚É£  workspace linking (npm workspaces)
  - name: Add workspaces
    run: |
      cd $REPO_NAME
      npx json -I -f package.json -e 'this.workspaces=["contracts","server","web"]'
      echo "nodejs-20" > .tool-versions || true

  # 6Ô∏è‚É£  install & test build
  - name: Install & test
    run: |
      cd $REPO_NAME
      pnpm install --frozen-lockfile
      pnpm turbo run build --parallel

  # 7Ô∏è‚É£  commit to git
  - name: Commit
    run: |
      cd $REPO_NAME
      git add .
      git commit -m "feat: initial Task-chain scaffold (contracts/server/web)"
